#!/bin/bash

# ---
# --- THE ONLY SETTING YOU NEED TO MAKE, PROVIDE THE NAME OF YOUR APPLICATION
# ---
APP_NAME=oe-system-three-reference
APP_PORT=8090


# --- general server setup ---
APP_INSTALL_DIR=/opt/open-english/${APP_NAME}
APP_DEFAULTS=/etc/default/${APP_NAME}
APP_INITD=/etc/init.d/${APP_NAME}
LOG_DIR=${APP_INSTALL_DIR}/logs

HTTP_SERVICE=0-${APP_NAME}
HTTPS_SERVICE=0-${APP_NAME}-ssl
HTTP_SERVICE_CONFIG=/etc/apache2/sites-available/${HTTP_SERVICE}.conf
HTTPS_SERVICE_CONFIG=/etc/apache2/sites-available/${HTTPS_SERVICE}.conf

# --- oe deploy data ---

# This file is available on all machines in ALL environments
USERDATA=`cat /opt/open-english/setup/CONFIGDATA`
if ! test "$USERDATA"
then
        echo "Cannot find /opt/oe/CONFIGDATA... cant install... exiting"
        exit 1
fi
# get the 8th value, which is our ENV
set $USERDATA; OE_ENV=$8

# if we don't have the OE_ENV, bail
if [ "$OE_ENV" = "" ]; then
    echo "OE env var OE_ENV not set, app will not find database config!"
    printenv
    exit 1;
fi

# --- install oe-activemq ONLY IF NEEDED
#if [ "$OE_ENV" = "dev" ]; then
#    tar zxf /opt/open-english/install/oe-active-mq/oe-activemq-*-bin.tar.gz -C / --strip 1
#    sh /opt/open-english/install/oe-active-mq/install-oe-activemq.sh oe-location-service.properties
#fi

# --- update permissions on the directory ---
mkdir -p ${LOG_DIR}
chmod 755 ${APP_INITD}
chmod 775 ${LOG_DIR}

# ---Switching from console to file in log4j.xml ---
CONSOLE_REF="<appender-ref ref=\"STDOUT\"\/>"
FILE_REF="<appender-ref ref=\"DAILYFILE\"\/>"

sed -i "s/${CONSOLE_REF}/${FILE_REF}/g" ${APP_INSTALL_DIR}/config/logback.xml

# --- create the oe user and group ---
USERNAME=oe
adduser --system --group --disabled-password --shell /bin/sh $USERNAME
chown -R $USERNAME.$USERNAME /opt/open-english/${APP_NAME}


# --- DNS ---
FINAL_ENV=".$OE_ENV"
if [ "$OE_ENV" = "prod" ]; then
    FINAL_ENV=
fi

# --- set env specific values ---
sed -i  "s/%SUB_DOMAIN%/$FINAL_ENV/g" ${APP_DEFAULTS}

# --- MEMORY ---
JAVA_MAX_MEM="-Xmx1500m"
# stage and prod are considered the spring 'prod' profile
SPRING_PROFILE="prod"
if [ "$OE_ENV" = "dev" ]; then
    JAVA_MAX_MEM=
    SPRING_PROFILE="dev"
fi

DNS_NAME=${APP_NAME}${FINAL_ENV}.openenglish.com

# --- set env specific values ---
sed -i  "s/%JAVA_MAX_MEM%/$JAVA_MAX_MEM/g" ${APP_DEFAULTS}
sed -i  "s/%APP_NAME%/$APP_NAME/g" ${APP_DEFAULTS}
sed -i  "s/%SPRING_PROFILE%/$SPRING_PROFILE/g" ${APP_DEFAULTS}

sed -i "s/%APP_NAME%/$APP_NAME/g" ${APP_INITD}

# --- add to the system ---
update-rc.d -f ${APP_NAME} remove
update-rc.d ${APP_NAME} defaults


# --- apache setup ---
a2ensite ${HTTP_SERVICE}
a2ensite ${HTTPS_SERVICE}
a2enmod proxy
a2enmod proxy_http
a2enmod rewrite
a2enmod ssl

# update the apache config files
SSL_CHAIN=

if [ "$OE_ENV" = "dev" ]; then
    SSL_CHAIN="#"
fi

sed -i  "s/%SERVER_DNS%/$DNS_NAME/g" ${HTTP_SERVICE_CONFIG}
sed -i  "s/%APP_NAME%/$APP_NAME/g" ${HTTP_SERVICE_CONFIG}
sed -i  "s/%SERVER_DNS%/$DNS_NAME/g" ${HTTPS_SERVICE_CONFIG}
sed -i  "s/%APP_NAME%/$APP_NAME/g" ${HTTPS_SERVICE_CONFIG}

# we need to use $OE_ENV here because it does not have a dot in the name, $FINAL_ENV adds a dot to $OE_ENV
sed -i  "s/%ENV%/$OE_ENV/g" ${HTTPS_SERVICE_CONFIG}
sed -i  "s/%COOKIE%/$FINAL_ENV/g" ${HTTPS_SERVICE_CONFIG}
sed -i  "s/%SSL_CHAIN%/$SSL_CHAIN/g" ${HTTPS_SERVICE_CONFIG}
sed -i  "s/%APP_PORT%/$APP_PORT/g" ${HTTPS_SERVICE_CONFIG}


# --- restart servers ---
service ${APP_NAME} start
service apache2 restart

